/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author King
 */
public class Addlecturer extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Addlecturer() {
        initComponents();
        ImageIcon image = new javax.swing.ImageIcon(getClass().getResource("/image/icon9.png"));
        Image im = image.getImage();
        setIconImage(im);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to Exit?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION)
        {
            dispose();
        }
            }
        });
    }
    Connection conn = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    ResultSet rs = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtMiddleName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Egerton Students Attendance System");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1110, 680));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(45, 118, 232));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Lecturer ID  :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(45, 118, 232));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Full Name    :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(45, 118, 232));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("User Name   :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(45, 118, 232));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Password     :");

        txtID.setToolTipText("Lecturer Unique ID");
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        txtFirstName.setToolTipText("Lecturer Name");
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyTyped(evt);
            }
        });

        txtMiddleName.setToolTipText("Lecturer Login Username");
        txtMiddleName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMiddleNameKeyTyped(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 102, 255));
        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setToolTipText("Click here to save lecturer records.");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(102, 102, 255));
        btnClear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.setToolTipText("Click here to clear the text box.");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnQuit.setBackground(new java.awt.Color(102, 102, 255));
        btnQuit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnQuit.setText("Exit");
        btnQuit.setToolTipText("Click here to exit from the program");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Table);

        btnUpdate.setBackground(new java.awt.Color(102, 102, 255));
        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setToolTipText("Click here to update the lecturer record.");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 102, 255));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("Click here to remove the lecturer record.");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(45, 118, 232));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Department:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(45, 118, 232));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("LECTURERS MANAGEMENT");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtLastName.setToolTipText("Lecturer Login Password");
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNameKeyTyped(evt);
            }
        });

        jTextField1.setToolTipText("Search");
        jTextField1.setName(""); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/qwerty.PNG"))); // NOI18N
        jLabel7.setText("Search");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jComboBox12.setToolTipText("Choose Department");
        jComboBox12.setMinimumSize(new java.awt.Dimension(30, 20));
        jComboBox12.setPreferredSize(new java.awt.Dimension(30, 20));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.png"))); // NOI18N
        jLabel13.setText("jLabel8");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.png"))); // NOI18N
        jLabel10.setText("jLabel8");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.png"))); // NOI18N
        jLabel12.setText("jLabel8");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.png"))); // NOI18N
        jLabel8.setText("jLabel8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void fillcombobox(){
        try
        {
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
        }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null,"connection to the database is null!");
        }
        String sql = "select * from department where faculty = 'Science'";
        
        try{
            
            pst = (PreparedStatement) conn.prepareStatement(sql);
            rs = (ResultSet) pst.executeQuery();
            while(rs.next())
            {
                String sub = rs.getString("Name");
                jComboBox12.addItem(sub);
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed
    
    DefaultTableModel mod;
    String Id, FirstName, MiddleName, LastName,Course, line;
  
    public void UpdateJTable(String sql, String name){

//String sql = "SELECT student_idstudent, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as percentage FROM attendence where student_subject_subjectid = 102 group by student_idstudent";
try{

pst  = (PreparedStatement) conn.prepareStatement(sql);
pst.setString(1, name);
rs = (ResultSet) pst.executeQuery();
Table.setModel(DbUtils.resultSetToTableModel(rs));
}catch(SQLException e){
    JOptionPane.showMessageDialog(rootPane, "XAMPP Database threw an Error "+e.getMessage());
}

    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        mod = (DefaultTableModel)Table.getModel();
        mod.addColumn("Lecturer ID");
        mod.addColumn("Name");
        mod.addColumn("User Name");
        mod.addColumn("Password");
        mod.addColumn("Department");        
        fillcombobox();
    }//GEN-LAST:event_formWindowOpened

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
        String sql = "insert into lecturer (Lecturerid,Lecturername,Login_username,Password,Department) values(?,?,?,?,?)";
        String sql1 = "insert into login (username,password,usertype) values(?,?,?)";
        pst = (PreparedStatement) conn.prepareStatement(sql);
        pst1 = (PreparedStatement) conn.prepareStatement(sql1);
        String id = txtID.getText();
        String name = txtFirstName.getText();
        String user = txtMiddleName.getText();
        String pass = txtLastName.getText();
        String dept = jComboBox12.getSelectedItem().toString();
        String user1 = txtMiddleName.getText();
        String pass1 = txtLastName.getText();
        String type  = "Lecturer";
        pst.setString(1,id);
        pst.setString(2,name);
        pst.setString(3,user);
        pst.setString(4,pass);
        pst.setString(5,dept);
        pst1.setString(1,user1);
        pst1.setString(2,pass1);
        pst1.setString(3,type);
        pst.execute();
        pst1.execute();
        String sql2 = "select * from lecturer where Lecturername like ?";
        UpdateJTable(sql2,name);
        JOptionPane.showMessageDialog(rootPane, "Record for "+name+" has been added successfully!");
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
        JOptionPane.showMessageDialog(rootPane, "XAMPP Database threw an Error: "+e.getMessage());
}   
        this.txtID.requestFocus();
    }//GEN-LAST:event_btnAddActionPerformed

    /*private void saveFile(){
        try{
          File file = new File("student_db.txt");
          if(!file.exists()){
              file.createNewFile();
          }
          FileWriter fw = new FileWriter(file.getAbsoluteFile());
          BufferedWriter bw = new BufferedWriter(fw);
          
          for(int i=0; i<Table.getRowCount(); i++){
              for(int j=0; j<Table.getColumnCount(); j++){
                  bw.write((String)Table.getModel().getValueAt(i,j)+",");
              }
              bw.write("\n");
          }
        bw.close();
        fw.close();
      }catch(Exception ex){
          
      }
    }*/
    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
       String message = "Do you want to exit?";
       String title = "Program Exit!";

    int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
    
    if (reply ==JOptionPane.NO_OPTION)
    {
        this.txtID.setText("");
        this.txtFirstName.setText("");
        this.txtMiddleName.setText("");
        this.txtLastName.setText("");
        this.jComboBox12.setSelectedItem(null);
        this.txtID.requestFocus();
    }
    
    if (reply == JOptionPane.YES_OPTION)
    {
      this.dispose();
    }
        
     
      
    }//GEN-LAST:event_btnQuitActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        int index =Table.getSelectedRow();
        TableModel model = Table.getModel();
        Id = model.getValueAt(index, 0).toString();
        FirstName = model.getValueAt(index, 1).toString();
        MiddleName = model.getValueAt(index, 2).toString();
        LastName = model.getValueAt(index, 3).toString();
        Course = model.getValueAt(index, 4).toString();
               
        txtID.setText(Id);
        txtFirstName.setText(FirstName);
        txtMiddleName.setText(MiddleName);
        txtLastName.setText(LastName);
        jComboBox12.setSelectedItem(Course);
    }//GEN-LAST:event_TableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        mod = (DefaultTableModel) Table.getModel();
        
        if(Table.getSelectedRow()==-1){
            if(Table.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane,"Table is Empty");
            }else{
                JOptionPane.showMessageDialog(rootPane, "You must select a record");
            }
        }else{
            mod.setValueAt(txtID.getText(),Table.getSelectedRow(), 0);
            mod.setValueAt(txtFirstName.getText(), Table.getSelectedRow(), 1);
            mod.setValueAt(txtMiddleName.getText(), Table.getSelectedRow(), 2);
            mod.setValueAt(txtLastName.getText(), Table.getSelectedRow(), 3);
            mod.setValueAt(jComboBox12.getSelectedItem().toString(), Table.getSelectedRow(), 4);
        try{
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
        String sql = "update lecturer set Lecturername=?,Login_username=?,Password=?,Department=? where Lecturerid=?";
        String sql1 = "update login set password=?,usertype=? where username=?";
        pst = (PreparedStatement) conn.prepareStatement(sql);
        pst1 = (PreparedStatement) conn.prepareStatement(sql1);
        String id = txtID.getText();
        String name = txtFirstName.getText();
        String user = txtMiddleName.getText();
        String pass = txtLastName.getText();
        String dept = jComboBox12.getSelectedItem().toString();
        String user1 = txtMiddleName.getText();
        String pass1 = txtLastName.getText();
        String type  = "Lecturer";
        pst.setString(5,id);
        pst.setString(1,name);
        pst.setString(2,user);
        pst.setString(3,pass);
        pst.setString(4,dept);
        pst1.setString(3,user1);
        pst1.setString(1,pass1);
        pst1.setString(2,type);
        pst.execute();
        pst1.execute();
        String sql2 = "select * from lecturer where Lecturername like ?";
        UpdateJTable(sql2, name);
        JOptionPane.showMessageDialog(rootPane, "Record for "+name+" Updated!");
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
        JOptionPane.showMessageDialog(rootPane, "XAMPP Database threw an Error: "+e.getMessage());
}
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        mod = (DefaultTableModel) Table.getModel();
        
        if(Table.getSelectedRow()==-1){
            if(Table.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane,"Table is Empty");
            }else{
                JOptionPane.showMessageDialog(rootPane, "You must select a record");
            }
        }else{
            try{
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
        String sql = "delete from lecturer where Lecturerid = ?";
        String sql1 = "delete from login where username = ?";
        pst = (PreparedStatement) conn.prepareStatement(sql);
        pst1 = (PreparedStatement) conn.prepareStatement(sql1);
        String id = txtID.getText();
        String name = txtMiddleName.getText();
        pst.setString(1,id);
        pst1.setString(1,name);
        pst.execute();
        pst1.executeUpdate();
        String sql2 = "select * from lecturer where Lecturername like ?";
        UpdateJTable(sql2, name);
            JOptionPane.showMessageDialog(rootPane, "Record is deleted!");
            this.txtID.setText("");
            this.txtFirstName.setText("");
            this.txtMiddleName.setText("");
            this.txtLastName.setText("");
            this.jComboBox12.setSelectedItem(null);
            this.txtID.requestFocus();
        }catch(HeadlessException | ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(rootPane, "XAMPP Database threw an Error: "+e.getMessage());
        }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
            this.txtID.setText("");
            this.txtFirstName.setText("");
            this.txtMiddleName.setText("");
            this.txtLastName.setText("");
            this.jComboBox12.setSelectedItem(null);
            this.txtID.requestFocus();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        if("".equals(jTextField1.getText())){
            Table.setVisible(false);
        }else{
            Table.setVisible(true);
            try{
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
        String sql = "select * from lecturer where Lecturername like ? or Lecturerid like ?";
        pst1 = (PreparedStatement) conn.prepareStatement(sql);
        String name = jTextField1.getText();
        String id = jTextField1.getText();
        pst1.setString(1,"%"+name+"%");
        pst1.setString(2,"%"+id+"%");
        rs = (ResultSet) pst1.executeQuery();
        Table.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(ClassNotFoundException | SQLException e){
        JOptionPane.showMessageDialog(rootPane, "XAMPP Database threw an Error: "+e.getMessage());
        }
}
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jLabel7MouseClicked

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        System.out.println(evt.getKeyChar());
        if ((Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE)) {
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/right.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel13.getWidth(), jLabel13.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel13.setIcon(ge);
        }else{
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/Wrong.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel13.getWidth(), jLabel13.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel13.setIcon(ge);
        getToolkit().beep();
	evt.consume();
        JOptionPane.showMessageDialog(this, "Use Digits only!");
        txtID.setText("");
        }
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtFirstNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        System.out.println(evt.getKeyChar());
        if (!((Character.isLetter(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_PERIOD))) {	  
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/Wrong.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel10.getWidth(), jLabel10.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel10.setIcon(ge);            
            getToolkit().beep();
            txtFirstName.setText("");
            JOptionPane.showMessageDialog(this, "Use Letters only!");
            evt.consume();
        }else{
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/right.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel10.getWidth(), jLabel10.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel10.setIcon(ge);
        }
    }//GEN-LAST:event_txtFirstNameKeyTyped

    private void txtMiddleNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMiddleNameKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        System.out.println(evt.getKeyChar());
        if (!((Character.isLetter(c)) || (Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.SHIFT_DOWN_MASK))) {	  
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/Wrong.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel12.getWidth(), jLabel12.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel12.setIcon(ge);            
            getToolkit().beep();
            txtMiddleName.setText("");
            JOptionPane.showMessageDialog(this, "Use Allowable Combinations!");
            evt.consume();
        }else{
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/right.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel12.getWidth(), jLabel12.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel12.setIcon(ge);
        }
    }//GEN-LAST:event_txtMiddleNameKeyTyped

    private void txtLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        System.out.println(evt.getKeyChar());
        if ((Character.isDigit(c)) || (Character.isLetter(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.SHIFT_DOWN_MASK)) {	
        if(txtLastName.getText().length()<7){
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/Wrong.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel8.getWidth(), jLabel8.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel8.setIcon(ge);
        }else{
        ImageIcon myImage = new javax.swing.ImageIcon(getClass().getResource("/image/right.PNG"));
        Image mg = myImage.getImage();
        Image newImage = mg.getScaledInstance(jLabel8.getWidth(), jLabel8.getHeight(), java.awt.Image.SCALE_SMOOTH);
        ImageIcon ge = new ImageIcon(newImage);
        jLabel8.setIcon(ge);
        }  
        }else{
        getToolkit().beep();
	evt.consume();
        JOptionPane.showMessageDialog(this, "Use Letters and Digits only!");
        txtLastName.setText("");
        }
    }//GEN-LAST:event_txtLastNameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Addlecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Addlecturer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    // End of variables declaration//GEN-END:variables
}
