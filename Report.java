
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.awt.print.*;
import java.sql.SQLException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author King
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Report
     */
    public Report() {
        initComponents();
        ImageIcon image = new javax.swing.ImageIcon(getClass().getResource("/image/icon9.png"));
        Image im = image.getImage();
        setIconImage(im);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to Exit?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION)
        {
            dispose();
        }
            }
        });
    }

    Connection conn = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;
    ResultSet rs = null;
    ResultSet rs1 = null;
    ResultSet rs2 = null;
    String iddd;
    

            
    public void UpdateJTable( String sql){

    //String sql = "SELECT student_idstudent, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as percentage FROM attendence where student_subject_subjectid = 102 group by student_idstudent";
    try{

    pst  = (PreparedStatement) conn.prepareStatement(sql);
    pst = (PreparedStatement) conn.prepareStatement(sql);
    pst.setString(1, jLabel1.getText());
    rs = (ResultSet) pst.executeQuery();
    jTable2.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
    public void UpdateJTable1( String sql){

    //String sql = "SELECT student_idstudent, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as percentage FROM attendence where student_subject_subjectid = 102 group by student_idstudent";
    try{

    pst  = (PreparedStatement) conn.prepareStatement(sql);
    pst.setString(1, jLabel1.getText());
                rs = (ResultSet) pst.executeQuery();
            if (rs.next()) {
                iddd = rs.getString("RegistrationNumber");
                System.out.println(iddd);
              
            } else {
                JOptionPane.showMessageDialog(null, "No record for " + jLabel1.getText());

            }
    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(HeadlessException | SQLException e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
    
    public void UpdateJTable3( String sql){

    //String sql = "SELECT student_idstudent, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as percentage FROM attendence where student_subject_subjectid = 102 group by student_idstudent";
    try{

    pst  = (PreparedStatement) conn.prepareStatement(sql);
    pst = (PreparedStatement) conn.prepareStatement(sql);
    pst.setString(1, jLabel1.getText());
            rs = (ResultSet) pst.executeQuery();
    jTable3.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
        
    public void UpdateJTable4( String sql){

    //String sql = "SELECT student_idstudent, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as percentage FROM attendence where student_subject_subjectid = 102 group by student_idstudent";
    try{

    pst  = (PreparedStatement) conn.prepareStatement(sql);
    pst = (PreparedStatement) conn.prepareStatement(sql);
    pst.setString(1, jLabel1.getText());
            rs = (ResultSet) pst.executeQuery();
    jTable4.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(SQLException e){
    JOptionPane.showMessageDialog(null, e);
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Egerton Students Attendance System");
        setBackground(new java.awt.Color(204, 204, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(45, 118, 232));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("UNIT");

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Studentid", "Student name"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setBackground(new java.awt.Color(102, 102, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Print (Complete)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(45, 118, 232));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("ATTENDANCE REPORT FOR STUDENTS STUDIES TAKING");

        jLabel2.setForeground(new java.awt.Color(45, 118, 232));
        jLabel2.setText("Lecturer");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 102, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Print (Incomplete)");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(437, 437, 437)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 37, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    try {
    Class.forName("com.mysql.jdbc.Driver");
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
    String sql = "SELECT idstudent as RegistrationNumber,studentName as StudentName, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as Percentages, CASE WHEN(count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100)>=75 THEN 'COMPLETE'"
            + " WHEN(count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100)<75 THEN 'INCOMPLETE' END as Remark FROM attendence where subjectid = ? group by idstudent";
    String sql1 = "SELECT idstudent as RegistrationNumber, Date1 as Date, count(CASE WHEN  status = 'Present'  then 1 END) as Present, count(CASE WHEN  status = 'Absent'  then 1 END) as Absent, subjectid as UnitCode from attendence where subjectid = ? group by idstudent";
    String sql3 = "SELECT idstudent as RegistrationNumber,studentName as StudentName, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as Percentages, CASE WHEN(count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100)>=75 THEN 'COMPLETE' END as Remark FROM attendence where subjectid = ? group by idstudent";
    String sql4 = "SELECT idstudent as RegistrationNumber,studentName as StudentName, count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100 as Percentages, CASE WHEN(count(CASE WHEN  status = 'Present'  then 1 END)/count(*)*100)<75 THEN 'INCOMPLETE' END as Remark FROM attendence where subjectid = ? group by idstudent";
    UpdateJTable(sql);
    UpdateJTable1(sql1);
    UpdateJTable3(sql3);
    UpdateJTable4(sql4);
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } 
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "Do you want to Exit?", "Confirmation", JOptionPane.YES_NO_OPTION);
			if (confirm == JOptionPane.YES_OPTION)
			{       
                              
				this.dispose();

			}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Print print = new Print();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Print1 print = new Print1();
    }//GEN-LAST:event_jButton3ActionPerformed
public class Print extends JFrame implements Printable, ActionListener
{
    JLabel  per, pers, fac, dep, cod, da, dat, datt, dati, tit, cf, sig, cha, lec;
    JTextField per1, fac1, dep1, cod1, dat1, tit1, cf1, sig1, cha1, lec1;
    JPanel jp;
    JScrollBar jsp;

    /** Creates a new instance of StudentInfo */
    public Print()
    {
        String cName = null;
        String cF = null;
        String dept = null;
        String faculty = null;
        String HOD = null;
        try{
        Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
            String sql = "select * from subject where Course=?";
            pst = (PreparedStatement) conn.prepareStatement(sql);
            pst.setString(1, jLabel1.getText());
            rs = (ResultSet) pst.executeQuery();
            while(rs.next()){
                cName = rs.getString("subjectname");
                cF = rs.getString("CumulativeF");
                
            }
            String sql1 = "select * from lecturer where Lecturername=?";
            pst1 = (PreparedStatement) conn.prepareStatement(sql1);
            pst1.setString(1, jLabel2.getText());
            rs1 = (ResultSet) pst1.executeQuery();
            while(rs1.next()){
                dept = rs1.getString("Department");  
            }
            String sql2 = "select * from department where Name=?";
            pst2 = (PreparedStatement) conn.prepareStatement(sql2);
            pst2.setString(1, dept);
            rs2 = (ResultSet) pst2.executeQuery();
            while(rs2.next()){
                faculty = rs2.getString("Faculty");
                HOD = rs2.getString("HOD");
            }
            } catch (Exception e) {
            System.out.println("no");
            JOptionPane.showMessageDialog(null, e);

        } 
             	Toolkit kit=Toolkit.getDefaultToolkit();
             	Dimension screenSize= kit.getScreenSize();
             	setSize(screenSize.width,screenSize.height);
                String timeStamp = new SimpleDateFormat("dd MMMMM, yyyy").format(Calendar.getInstance().getTime());


                setLayout(null);
                jp=new JPanel(null);
                jp.setBounds(0,0,screenSize.width,screenSize.height);
                jp.setBackground(new Color(255,255,255));
                add(jp);
                
                pers=new JLabel();
                pers.setBounds(screenSize.width/3,0,280,70);
                ImageIcon image = new javax.swing.ImageIcon(getClass().getResource("/image/logooo.PNG"));
                Image im = image.getImage();
                Image newImage = im.getScaledInstance(pers.getWidth(), pers.getHeight(), java.awt.Image.SCALE_SMOOTH);
                ImageIcon mage = new ImageIcon(newImage);
                pers.setIcon(mage);
                pers.setIcon(image);
                jp.add(pers);
                
                per=new JLabel();
                per.setText("Office Of Registra AA Affairs");
                per.setFont(new Font("Sans-Serif",Font.BOLD+Font.ITALIC,20));
                per.setForeground(Color.black);
                per.setBounds(screenSize.width/3,70,screenSize.width,30);
                jp.add(per);

                per=new JLabel();
                per.setText("Class Attendance Registration Form " + dept + " Department");
                per.setFont(new Font("Sans-Serif",Font.BOLD+Font.ITALIC,20));
                per.setForeground(Color.black);
                per.setBounds(screenSize.width/4,90,screenSize.width,30);
                jp.add(per);


                fac=new JLabel();
                fac.setText("Faculty Of:");
                fac.setFont(new Font("Arial",Font.BOLD,15));
                fac.setBounds(30,125,200,20);
                jp.add(fac);

                fac1=new JTextField();
                fac1.setFont(new Font("Arial",Font.BOLD,15));
                fac1.setBounds(175,125,200,20);
                fac1.setText(faculty.toUpperCase());
                fac1.setEditable(false);
                jp.add(fac1);

                dep=new JLabel();
                dep.setText("Department:");
                dep.setFont(new Font("Arial",Font.BOLD,15));
                dep.setBounds(30,150,200,20);
                jp.add(dep);

                dep1=new JTextField();
                dep1.setFont(new Font("Arial",Font.BOLD,15));
                dep1.setBounds(175,150,200,20);
                dep1.setText(dept.toUpperCase());
                dep1.setEditable(false);
                jp.add(dep1);


                cod=new JLabel();
                cod.setText("Course Code:");
                cod.setBounds(30,175,100,20);
                cod.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cod);

                cod1=new JTextField();
                cod1.setFont(new Font("Arial",Font.BOLD,15));
                cod1.setBounds(175,175,200,20);
                cod1.setText(jLabel1.getText().toUpperCase());
                cod1.setEditable(false);
                jp.add(cod1);

                dat=new JLabel();
                dat.setText("Date:");
                dat.setBounds(30,200,200,20);
                dat.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(175,200,200,20);
                dat1.setText(timeStamp);
                dat1.setEditable(false);
                jp.add(dat1);

                tit=new JLabel();
                tit.setText("Course Title:");
                tit.setBounds(450,175,200,20);
                tit.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(tit);

                tit1=new JTextField();
                tit1.setFont(new Font("Arial",Font.BOLD,15));
                tit1.setBounds(650,175,200,20);
                tit1.setText(cName.toUpperCase());
                tit1.setEditable(false);
                jp.add(tit1);

                cf=new JLabel();
                cf.setText("CF:");
                cf.setBounds(950,175,150,20);
                cf.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cf);

                cf1=new JTextField();
                cf1.setFont(new Font("Arial",Font.BOLD,15));
                cf1.setBounds(1150,175,150,20);
                cf1.setText(cF);
                cf1.setEditable(false);
                jp.add(cf1);

                lec=new JLabel();
                lec.setText("Lecturer's Name:");
                lec.setBounds(30,screenSize.height-95,200,30);
                lec.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(lec);

                lec1=new JTextField();
                lec1.setFont(new Font("Arial",Font.BOLD,15));
                lec1.setBounds(250,screenSize.height-95,200,30);
                lec1.setText(jLabel2.getText().toUpperCase());
                lec1.setEditable(false);
                jp.add(lec1);


                cha=new JLabel();
                cha.setText("Chairperson of Department");
                cha.setBounds(30,screenSize.height-60,200,30);
                cha.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cha);

                cha1=new JTextField();
                cha1.setFont(new Font("Arial",Font.BOLD,15));
                cha1.setBounds(250,screenSize.height-60,200,30);
                cha1.setText(HOD.toUpperCase());
                cha1.setEditable(false);
                jp.add(cha1);

                sig=new JLabel();
                sig.setText("Signature");
                sig.setFont(new Font("Arial",Font.BOLD,15));
                sig.setBounds(650,screenSize.height-95,150,30);
                jp.add(sig);

                sig1=new JTextField();
                sig1.setFont(new Font("Arial",Font.BOLD,15));
                sig1.setBounds(780,screenSize.height-95,200,30);
                jp.add(sig1);
                
                dat=new JLabel();
                dat.setText("Date:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(1000,screenSize.height-95,150,30);
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(1100,screenSize.height-95,200,30);
                jp.add(dat1);

                dat=new JLabel();
                dat.setText("Date:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(650,screenSize.height-60,150,30);
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(780,screenSize.height-60,200,30);
                jp.add(dat1);
                
                da=new JLabel();
                da.setText("Students Registration Numbers:");
                da.setFont(new Font("Arial",Font.BOLD,15));
                da.setBounds(20,215,250,50);
                jp.add(da);
                datt=new JLabel();
                datt.setText("Students Full Names:");
                datt.setFont(new Font("Arial",Font.BOLD,15));
                datt.setBounds(370,215,250,50);
                jp.add(datt);
                dati=new JLabel();
                dati.setText("Percentages:");
                dati.setFont(new Font("Arial",Font.BOLD,15));
                dati.setBounds(720,215,250,50);
                jp.add(dati);
                dat=new JLabel();
                dat.setText("Remarks:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(1070,215,250,50);
                jp.add(dat);
                
                /*jsp = new JScrollBar(JScrollBar.VERTICAL);
                jTable2.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jsp.add(jTable2);
                jsp.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jp.add(jsp);*/
                jTable3.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                JScrollPane scr=new JScrollPane(jTable3);
                scr.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jp.add(scr);
                
                JButton printButton = new JButton("P");
                printButton.setFont(new Font("Arial",Font.BOLD,15));
                printButton.setBackground(Color.white);
                printButton.setBounds(500,screenSize.height - 100,100,20);
                jp.add(printButton);
                printButton.addActionListener(new Print(jp));

                setVisible(true);

    }
    public int print(Graphics g, PageFormat format, int page) throws
    PrinterException {

    	if (page > 0) { /* We have only one page, and 'page' is zero-based */
    		return NO_SUCH_PAGE;
    	}

    	// get the bounds of the component
        Dimension dim = jp.getSize();
        double cHeight = dim.getHeight();
        double cWidth = dim.getWidth();

        // get the bounds of the printable area
        double pHeight = format.getImageableHeight();
        double pWidth = format.getImageableWidth();

        double pXStart = format.getImageableX();
        double pYStart = format.getImageableY();

        double xRatio = pWidth / cWidth;
        double yRatio = pHeight / cHeight;


        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.WHITE);
        g2.translate(pXStart, pYStart);
        g2.scale(xRatio, yRatio);
        jp.paint(g2);

        return Printable.PAGE_EXISTS;
    }
    public void actionPerformed(ActionEvent e) {

    	PrinterJob pjob = PrinterJob.getPrinterJob();
    	PageFormat preformat = pjob.defaultPage();
    	preformat.setOrientation(PageFormat.LANDSCAPE);
    	PageFormat postformat = pjob.pageDialog(preformat);
    	//If user does not hit cancel then print.
    	if (preformat != postformat) {
    	    //Set print component
    	    pjob.setPrintable(this,postformat);
    	    if (pjob.printDialog()) {
    	        try {
					pjob.print();
				} catch (PrinterException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
    	    }
    	}
   }
    public Print(JPanel p) {
    	jp = p;
    }

}
private class Print1 extends JFrame implements Printable, ActionListener
{
    JLabel  per, pers, fac, dep, cod, da, dat, datt, dati, tit, cf, sig, cha, lec;
    JTextField per1, fac1, dep1, cod1, dat1, tit1, cf1, sig1, cha1, lec1;
    JPanel jp;
    JScrollBar jsp;

    /** Creates a new instance of StudentInfo */
    public Print1()
    {
        String cName = null;
        String cF = null;
        String dept = null;
        String faculty = null;
        String HOD = null;
        try{
        Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
            String sql = "select * from subject where Course=?";
            pst = (PreparedStatement) conn.prepareStatement(sql);
            pst.setString(1, jLabel1.getText());
            rs = (ResultSet) pst.executeQuery();
            while(rs.next()){
                cName = rs.getString("subjectname");
                cF = rs.getString("CumulativeF");
                
            }
            String sql1 = "select * from lecturer where Lecturername=?";
            pst1 = (PreparedStatement) conn.prepareStatement(sql1);
            pst1.setString(1, jLabel2.getText());
            rs1 = (ResultSet) pst1.executeQuery();
            while(rs1.next()){
                dept = rs1.getString("Department");  
            }
            String sql2 = "select * from department where Name=?";
            pst2 = (PreparedStatement) conn.prepareStatement(sql2);
            pst2.setString(1, dept);
            rs2 = (ResultSet) pst2.executeQuery();
            while(rs2.next()){
                faculty = rs2.getString("Faculty");
                HOD = rs2.getString("HOD");
            }
            } catch (Exception e) {
            System.out.println("no");
            JOptionPane.showMessageDialog(null, e);

        } 
             	Toolkit kit=Toolkit.getDefaultToolkit();
             	Dimension screenSize= kit.getScreenSize();
             	setSize(screenSize.width,screenSize.height);
                String timeStamp = new SimpleDateFormat("dd MMMMM, yyyy").format(Calendar.getInstance().getTime());


                setLayout(null);
                jp=new JPanel(null);
                jp.setBounds(0,0,screenSize.width,screenSize.height);
                jp.setBackground(new Color(255,255,255));
                add(jp);
                
                pers=new JLabel();
                pers.setBounds(screenSize.width/3,0,280,70);
                ImageIcon image = new javax.swing.ImageIcon(getClass().getResource("/image/logooo.PNG"));
                Image im = image.getImage();
                Image newImage = im.getScaledInstance(pers.getWidth(), pers.getHeight(), java.awt.Image.SCALE_SMOOTH);
                ImageIcon mage = new ImageIcon(newImage);
                pers.setIcon(mage);
                pers.setIcon(image);
                jp.add(pers);
                
                per=new JLabel();
                per.setText("Office Of Registra AA Affairs");
                per.setFont(new Font("Sans-Serif",Font.BOLD+Font.ITALIC,20));
                per.setForeground(Color.black);
                per.setBounds(screenSize.width/3,70,screenSize.width,30);
                jp.add(per);

                per=new JLabel();
                per.setText("Class Attendance Registration Form " + dept + " Department");
                per.setFont(new Font("Sans-Serif",Font.BOLD+Font.ITALIC,20));
                per.setForeground(Color.black);
                per.setBounds(screenSize.width/4,90,screenSize.width,30);
                jp.add(per);


                fac=new JLabel();
                fac.setText("Faculty Of:");
                fac.setFont(new Font("Arial",Font.BOLD,15));
                fac.setBounds(30,125,200,20);
                jp.add(fac);

                fac1=new JTextField();
                fac1.setFont(new Font("Arial",Font.BOLD,15));
                fac1.setBounds(175,125,200,20);
                fac1.setText(faculty.toUpperCase());
                fac1.setEditable(false);
                jp.add(fac1);

                dep=new JLabel();
                dep.setText("Department:");
                dep.setFont(new Font("Arial",Font.BOLD,15));
                dep.setBounds(30,150,200,20);
                jp.add(dep);

                dep1=new JTextField();
                dep1.setFont(new Font("Arial",Font.BOLD,15));
                dep1.setBounds(175,150,200,20);
                dep1.setText(dept.toUpperCase());
                dep1.setEditable(false);
                jp.add(dep1);


                cod=new JLabel();
                cod.setText("Course Code:");
                cod.setBounds(30,175,100,20);
                cod.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cod);

                cod1=new JTextField();
                cod1.setFont(new Font("Arial",Font.BOLD,15));
                cod1.setBounds(175,175,200,20);
                cod1.setText(jLabel1.getText().toUpperCase());
                cod1.setEditable(false);
                jp.add(cod1);

                dat=new JLabel();
                dat.setText("Date:");
                dat.setBounds(30,200,200,20);
                dat.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(175,200,200,20);
                dat1.setText(timeStamp);
                dat1.setEditable(false);
                jp.add(dat1);

                tit=new JLabel();
                tit.setText("Course Title:");
                tit.setBounds(450,175,200,20);
                tit.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(tit);

                tit1=new JTextField();
                tit1.setFont(new Font("Arial",Font.BOLD,15));
                tit1.setBounds(650,175,200,20);
                tit1.setText(cName.toUpperCase());
                tit1.setEditable(false);
                jp.add(tit1);

                cf=new JLabel();
                cf.setText("CF:");
                cf.setBounds(950,175,150,20);
                cf.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cf);

                cf1=new JTextField();
                cf1.setFont(new Font("Arial",Font.BOLD,15));
                cf1.setBounds(1150,175,150,20);
                cf1.setText(cF);
                cf1.setEditable(false);
                jp.add(cf1);

                lec=new JLabel();
                lec.setText("Lecturer's Name:");
                lec.setBounds(30,screenSize.height-95,200,30);
                lec.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(lec);

                lec1=new JTextField();
                lec1.setFont(new Font("Arial",Font.BOLD,15));
                lec1.setBounds(250,screenSize.height-95,200,30);
                lec1.setText(jLabel2.getText().toUpperCase());
                lec1.setEditable(false);
                jp.add(lec1);


                cha=new JLabel();
                cha.setText("Chairperson of Department");
                cha.setBounds(30,screenSize.height-60,200,30);
                cha.setFont(new Font("Arial",Font.BOLD,15));
                jp.add(cha);

                cha1=new JTextField();
                cha1.setFont(new Font("Arial",Font.BOLD,15));
                cha1.setBounds(250,screenSize.height-60,200,30);
                cha1.setText(HOD.toUpperCase());
                cha1.setEditable(false);
                jp.add(cha1);

                sig=new JLabel();
                sig.setText("Signature");
                sig.setFont(new Font("Arial",Font.BOLD,15));
                sig.setBounds(650,screenSize.height-95,150,30);
                jp.add(sig);

                sig1=new JTextField();
                sig1.setFont(new Font("Arial",Font.BOLD,15));
                sig1.setBounds(780,screenSize.height-95,200,30);
                jp.add(sig1);
                
                dat=new JLabel();
                dat.setText("Date:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(1000,screenSize.height-95,150,30);
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(1100,screenSize.height-95,200,30);
                jp.add(dat1);

                dat=new JLabel();
                dat.setText("Date:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(650,screenSize.height-60,150,30);
                jp.add(dat);

                dat1=new JTextField();
                dat1.setFont(new Font("Arial",Font.BOLD,15));
                dat1.setBounds(780,screenSize.height-60,200,30);
                jp.add(dat1);
                
                da=new JLabel();
                da.setText("Students Registration Numbers:");
                da.setFont(new Font("Arial",Font.BOLD,15));
                da.setBounds(20,215,250,50);
                jp.add(da);
                datt=new JLabel();
                datt.setText("Students Full Names:");
                datt.setFont(new Font("Arial",Font.BOLD,15));
                datt.setBounds(370,215,250,50);
                jp.add(datt);
                dati=new JLabel();
                dati.setText("Percentages:");
                dati.setFont(new Font("Arial",Font.BOLD,15));
                dati.setBounds(720,215,250,50);
                jp.add(dati);
                dat=new JLabel();
                dat.setText("Remarks:");
                dat.setFont(new Font("Arial",Font.BOLD,15));
                dat.setBounds(1070,215,250,50);
                jp.add(dat);
                
                /*jsp = new JScrollBar(JScrollBar.VERTICAL);
                jTable2.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jsp.add(jTable2);
                jsp.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jp.add(jsp);*/
                jTable4.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                JScrollPane scr=new JScrollPane(jTable4);
                scr.setBounds(20,250,screenSize.width - 40,screenSize.height - 350);
                jp.add(scr);
                
                JButton printButton = new JButton("P");
                printButton.setFont(new Font("Arial",Font.BOLD,15));
                printButton.setBackground(Color.white);
                printButton.setBounds(500,screenSize.height - 100,100,20);
                jp.add(printButton);
                printButton.addActionListener(new Print1(jp));

                setVisible(true);

    }
    public int print(Graphics g, PageFormat format, int page) throws
    PrinterException {

    	if (page > 0) { /* We have only one page, and 'page' is zero-based */
    		return NO_SUCH_PAGE;
    	}

    	// get the bounds of the component
        Dimension dim = jp.getSize();
        double cHeight = dim.getHeight();
        double cWidth = dim.getWidth();

        // get the bounds of the printable area
        double pHeight = format.getImageableHeight();
        double pWidth = format.getImageableWidth();

        double pXStart = format.getImageableX();
        double pYStart = format.getImageableY();

        double xRatio = pWidth / cWidth;
        double yRatio = pHeight / cHeight;


        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.WHITE);
        g2.translate(pXStart, pYStart);
        g2.scale(xRatio, yRatio);
        jp.paint(g2);

        return Printable.PAGE_EXISTS;
    }
    public void actionPerformed(ActionEvent e) {

    	PrinterJob pjob = PrinterJob.getPrinterJob();
    	PageFormat preformat = pjob.defaultPage();
    	preformat.setOrientation(PageFormat.LANDSCAPE);
    	PageFormat postformat = pjob.pageDialog(preformat);
    	//If user does not hit cancel then print.
    	if (preformat != postformat) {
    	    //Set print component
    	    pjob.setPrintable(this,postformat);
    	    if (pjob.printDialog()) {
    	        try {
					pjob.print();
				} catch (PrinterException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
    	    }
    	}
   }
    public Print1(JPanel p) {
    	jp = p;
    }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }
    void setit(String text) {
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
            String sql = "select * from attendence where subjectid=?";
            pst = (PreparedStatement) conn.prepareStatement(sql);
            pst.setString(1, text);
            rs = (ResultSet) pst.executeQuery();

            if (rs.next()) {
                iddd = rs.getString("subjectid");
                jLabel1.setText(iddd);
                System.out.println(""+iddd);
              
            } else {
                JOptionPane.showMessageDialog(null, "Please add attendance!");

            }
        } catch (Exception e) {
            System.out.println("no");
            JOptionPane.showMessageDialog(null, e);

        }  
    }
        void setit2(String text) {
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/attendant", "root", "");
            String sql = "select * from Lecturer where Lecturername=?";
            pst = (PreparedStatement) conn.prepareStatement(sql);
            pst.setString(1, text);
            rs = (ResultSet) pst.executeQuery();

            if (rs.next()) {
                String name = rs.getString("Lecturername");
                jLabel2.setText(name);
              
            } else {
                JOptionPane.showMessageDialog(null, "Please add attendance!");

            }
        } catch (Exception e) {
            System.out.println("no");
            JOptionPane.showMessageDialog(null, e);

        }  
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
